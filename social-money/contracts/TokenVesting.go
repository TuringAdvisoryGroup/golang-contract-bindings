// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contracts

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// ITokenVestingVestingInfo is an auto generated low-level Go binding around an user-defined struct.
type ITokenVestingVestingInfo struct {
	VestingBeneficiary common.Address
	TotalBalance       *big.Int
	BeneficiariesCount *big.Int
	Start              *big.Int
	Stop               *big.Int
}

// TokenVestingMetaData contains all meta data concerning the TokenVesting contract.
var TokenVestingMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vestingBeneficiary\",\"type\":\"address\"}],\"name\":\"LogBeneficiaryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vestingBeneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vestingPeriodInDays\",\"type\":\"uint256\"}],\"name\":\"LogTokenAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vestingBeneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Released\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DAYS_IN_SECONDS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address[3]\",\"name\":\"_beneficiaries\",\"type\":\"address[3]\"},{\"internalType\":\"uint256[3]\",\"name\":\"_proportions\",\"type\":\"uint256[3]\"},{\"internalType\":\"uint256\",\"name\":\"_vestingPeriodInDays\",\"type\":\"uint256\"}],\"name\":\"addToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"beneficiaries\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"proportion\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"streamId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"remaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"beneficiaryTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"getAllTokensByBeneficiary\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getVestingInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"vestingBeneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"beneficiariesCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stop\",\"type\":\"uint256\"}],\"internalType\":\"structITokenVesting.VestingInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"releaseAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"releaseableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_beneficiary\",\"type\":\"address\"}],\"name\":\"releaseableAmountByAddress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sablier\",\"type\":\"address\"}],\"name\":\"setSablier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vestingBeneficiary\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_newVestingBeneficiary\",\"type\":\"address\"}],\"name\":\"setVestingAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vestingBeneficiary\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_vestingReferral\",\"type\":\"address\"}],\"name\":\"setVestingReferral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"vestedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vestingInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"vestingBeneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"beneficiariesCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"start\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stop\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "0x608060405234801561001057600080fd5b50600436106101585760003560e01c806390096556116100c3578063d2e836f81161007c578063d2e836f814610422578063d547741f1461043e578063e1762ef31461045a578063f2fde38b14610478578063f78e633d14610494578063fb897ce4146104c857610158565b8063900965561461033c5780639010d07c1461035857806391d1485414610388578063a217fddf146103b8578063c25e888f146103d6578063ca15c873146103f257610158565b806342e161611161011557806342e161611461024157806347a9d1451461027157806348b75044146102a1578063529849e9146102bd578063580fc80a146102f05780636d18450a1461030c57610158565b80630c0cf20b1461015d578063248a9ca3146101795780632f2ff15d146101a957806336568abe146101c5578063384711cc146101e15780634020925a14610211575b600080fd5b610177600480360381019061017291906134a7565b6104f8565b005b610193600480360381019061018e91906135bf565b610625565b6040516101a09190613bc0565b60405180910390f35b6101c360048036038101906101be91906135e8565b610644565b005b6101df60048036038101906101da91906135e8565b6106cd565b005b6101fb60048036038101906101f69190613442565b610766565b6040516102089190613cd6565b60405180910390f35b61022b6004803603810190610226919061346b565b6108b3565b6040516102389190613cd6565b60405180910390f35b61025b60048036038101906102569190613442565b6109d1565b6040516102689190613cd6565b60405180910390f35b61028b6004803603810190610286919061355a565b610cb7565b6040516102989190613a02565b60405180910390f35b6102bb60048036038101906102b6919061346b565b610d05565b005b6102d760048036038101906102d2919061355a565b6110f8565b6040516102e79493929190613aeb565b60405180910390f35b61030a60048036038101906103059190613442565b611155565b005b61032660048036038101906103219190613442565b6112bb565b6040516103339190613b83565b60405180910390f35b61035660048036038101906103519190613442565b611388565b005b610372600480360381019061036d9190613624565b611418565b60405161037f9190613a02565b60405180910390f35b6103a2600480360381019061039d91906135e8565b611449565b6040516103af9190613ba5565b60405180910390f35b6103c061147a565b6040516103cd9190613bc0565b60405180910390f35b6103f060048036038101906103eb91906134f6565b611481565b005b61040c600480360381019061040791906135bf565b611d2a565b6040516104199190613cd6565b60405180910390f35b61043c600480360381019061043791906134a7565b611d50565b005b610458600480360381019061045391906135e8565b611dbb565b005b610462611e44565b60405161046f9190613cd6565b60405180910390f35b610492600480360381019061048d9190613442565b611e4b565b005b6104ae60048036038101906104a99190613442565b611f24565b6040516104bf959493929190613b30565b60405180910390f35b6104e260048036038101906104dd9190613442565b611f7a565b6040516104ef9190613cbb565b60405180910390f35b6105056000801b33611449565b610544576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053b90613c3b565b60405180910390fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610614576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060b90613c7b565b60405180910390fd5b61062082600283612081565b505050565b6000806000838152602001908152602001600020600201549050919050565b61066a600080848152602001908152602001600020600201546106656127d2565b611449565b6106bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180613e70602f913960400191505060405180910390fd5b6106c982826127da565b5050565b6106d56127d2565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610758576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180613f40602f913960400191505060405180910390fd5b610762828261286d565b5050565b600080600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820154815260200160048201548152505090508060800151421061084b5780602001519150506108ae565b60006108688260600151836080015161290090919063ffffffff16565b90506108a98161089b61088885606001514261290090919063ffffffff16565b856020015161298390919063ffffffff16565b612a0990919063ffffffff16565b925050505b919050565b6000806108c08484612a92565b90506000600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600201549050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633656eec282866040518363ffffffff1660e01b8152600401610977929190613cf1565b60206040518083038186803b15801561098f57600080fd5b505afa1580156109a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c79190613660565b9250505092915050565b6000806000905060005b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154811015610cad57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d7a42b54600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020600201546040518263ffffffff1660e01b8152600401610ad39190613cd6565b60206040518083038186803b158015610aeb57600080fd5b505afa158015610aff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b239190613596565b15610ca057600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633656eec2600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060020154600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518363ffffffff1660e01b8152600401610c4b929190613cf1565b60206040518083038186803b158015610c6357600080fd5b505afa158015610c77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9b9190613660565b820191505b80806001019150506109db565b5080915050919050565b60046020528160005260406000208181548110610cd357600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000610d118383612a92565b90506000600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600201549050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d7a42b54826040518263ffffffff1660e01b8152600401610dc69190613cd6565b60206040518083038186803b158015610dde57600080fd5b505afa158015610df2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e169190613596565b610e215750506110f4565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633656eec283866040518363ffffffff1660e01b8152600401610e80929190613cf1565b60206040518083038186803b158015610e9857600080fd5b505afa158015610eac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed09190613660565b90506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637a9b2c6c84846040518363ffffffff1660e01b8152600401610f31929190613d1a565b602060405180830381600087803b158015610f4b57600080fd5b505af1158015610f5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f839190613596565b905080610fc5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fbc90613bfb565b60405180910390fd5b42600260008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004015410801561106957506000600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002060030154115b156110ef576110ee3086600360008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000888152602001908152602001600020600301548973ffffffffffffffffffffffffffffffffffffffff16612be3909392919063ffffffff16565b5b505050505b5050565b6003602052816000526040600020602052806000526040600020600091509150508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561121657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116111cc575b5050505050905060005b81518110156112b6573073ffffffffffffffffffffffffffffffffffffffff166348b7504483838151811061125157fe5b6020026020010151856040518363ffffffff1660e01b8152600401611277929190613a1d565b600060405180830381600087803b15801561129157600080fd5b505af11580156112a5573d6000803e3d6000fd5b505050508080600101915050611220565b505050565b6060600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561137c57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611332575b50505050509050919050565b6113956000801b33611449565b6113d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113cb90613c3b565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600061144182600080868152602001908152602001600020600001612ca490919063ffffffff16565b905092915050565b600061147282600080868152602001908152602001600020600001612cbe90919063ffffffff16565b905092915050565b6000801b81565b61148e6000801b33611449565b6114cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c490613c3b565b60405180910390fd5b60006114e5620151808361298390919063ffffffff16565b90506000811161152a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152190613c1b565b60405180910390fd5b600061153f8242612cee90919063ffffffff16565b905060008673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161157c9190613a02565b60206040518083038186803b15801561159457600080fd5b505afa1580156115a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115cc9190613660565b90506040518060a00160405280876000600381106115e657fe5b6020020160208101906115f99190613442565b73ffffffffffffffffffffffffffffffffffffffff1681526020018281526020016003815260200142815260200183815250600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002015560608201518160030155608082015181600401559050508673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401611759929190613a46565b602060405180830381600087803b15801561177357600080fd5b505af1158015611787573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ab9190613596565b508673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3307fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401611807929190613a46565b602060405180830381600087803b15801561182157600080fd5b505af1158015611835573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118599190613596565b5060005b600260008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154811015611cb157600073ffffffffffffffffffffffffffffffffffffffff168782600381106118cb57fe5b6020020160208101906118de9190613442565b73ffffffffffffffffffffffffffffffffffffffff1614156118ff57611ca4565b86816003811061190b57fe5b60200201602081019061191e9190613442565b600360008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508581600381106119bb57fe5b6020020135600360008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020600101819055506000868260038110611a2557fe5b602002013590506000811415611a3b5750611ca4565b6000858281611a4657fe5b0690506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cc1b4bf68b8660038110611a9557fe5b602002016020810190611aa89190613442565b611abb858761290090919063ffffffff16565b8e428b6040518663ffffffff1660e01b8152600401611ade959493929190613a98565b602060405180830381600087803b158015611af857600080fd5b505af1158015611b0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b309190613660565b905080600360008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008681526020019081526020016000206002018190555081600360008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002060030181905550600460008b8660038110611bf257fe5b602002016020810190611c059190613442565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208b9080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505b808060010191505061185d565b508673ffffffffffffffffffffffffffffffffffffffff167f83ded1c585a48e261782bbbc8a77aeb32caff94dc4803fc6c8094721165a549087600060038110611cf757fe5b602002016020810190611d0a9190613442565b86604051611d19929190613a6f565b60405180910390a250505050505050565b6000611d49600080848152602001908152602001600020600001612d76565b9050919050565b611d5d6000801b33611449565b611d9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d9390613c3b565b60405180910390fd5b6000611da88385612a92565b9050611db5838284612081565b50505050565b611de160008084815260200190815260200160002060020154611ddc6127d2565b611449565b611e36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180613ec56030913960400191505060405180910390fd5b611e40828261286d565b5050565b6201518081565b611e586000801b33611449565b611e97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e8e90613c3b565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611f07576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611efe90613bdb565b60405180910390fd5b611f146000801b82610644565b611f216000801b33611dbb565b50565b60026020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040154905085565b611f82613358565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481526020016004820154815250509050919050565b6000612079836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612d8b565b905092915050565b600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141561220c5780600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b80600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000806000600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008681526020019081526020016000206002015490506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633656eec283306040518363ffffffff1660e01b8152600401612358929190613cf1565b60206040518083038186803b15801561237057600080fd5b505afa158015612384573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123a89190613660565b9050600061240142600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004015461290090919063ffffffff16565b9050612469600360008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008981526020019081526020016000206003015483612cee90919063ffffffff16565b945080858161247457fe5b0693506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636db9241b600360008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008b8152602001908152602001600020600201546040518263ffffffff1660e01b81526004016125279190613cd6565b602060405180830381600087803b15801561254157600080fd5b505af1158015612555573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125799190613596565b9050806125bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125b290613c9b565b60405180910390fd5b505050506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663cc1b4bf685612613858761290090919063ffffffff16565b8942600260008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401546040518663ffffffff1660e01b8152600401612678959493929190613a98565b602060405180830381600087803b15801561269257600080fd5b505af11580156126a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126ca9190613660565b905080600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008781526020019081526020016000206002018190555081600360008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000878152602001908152602001600020600301819055508573ffffffffffffffffffffffffffffffffffffffff167f276dd15f31f6b99d62254388504662bee969db7d6766172c0ff60f8576f09453856040516127c29190613a02565b60405180910390a2505050505050565b600033905090565b6128018160008085815260200190815260200160002060000161205190919063ffffffff16565b156128695761280e6127d2565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b61289481600080858152602001908152602001600020600001612dfb90919063ffffffff16565b156128fc576128a16127d2565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600082821115612978576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525060200191505060405180910390fd5b818303905092915050565b6000808314156129965760009050612a03565b60008284029050828482816129a757fe5b04146129fe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613ef56021913960400191505060405180910390fd5b809150505b92915050565b6000808211612a80576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536166654d6174683a206469766973696f6e206279207a65726f00000000000081525060200191505060405180910390fd5b818381612a8957fe5b04905092915050565b600080600090505b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154811015612ba1578273ffffffffffffffffffffffffffffffffffffffff16600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415612b945780915050612bdd565b8080600101915050612a9a565b506040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612bd490613c5b565b60405180910390fd5b92915050565b612c9e846323b872dd60e01b858585604051602401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050612e2b565b50505050565b6000612cb38360000183612f1a565b60001c905092915050565b6000612ce6836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612f9d565b905092915050565b600080828401905083811015612d6c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000612d8482600001612fc0565b9050919050565b6000612d978383612f9d565b612df0578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612df5565b600090505b92915050565b6000612e23836000018373ffffffffffffffffffffffffffffffffffffffff1660001b612fd1565b905092915050565b6000612e8d826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166130b99092919063ffffffff16565b9050600081511115612f1557808060200190516020811015612eae57600080fd5b8101908080519060200190929190505050612f14576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180613f16602a913960400191505060405180910390fd5b5b505050565b600081836000018054905011612f7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180613e4e6022913960400191505060405180910390fd5b826000018281548110612f8a57fe5b9060005260206000200154905092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600081600001805490509050919050565b600080836001016000848152602001908152602001600020549050600081146130ad576000600182039050600060018660000180549050039050600086600001828154811061301c57fe5b906000526020600020015490508087600001848154811061303957fe5b906000526020600020018190555060018301876001016000838152602001908152602001600020819055508660000180548061307157fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506130b3565b60009150505b92915050565b60606130c884846000856130d1565b90509392505050565b60608247101561312c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180613e9f6026913960400191505060405180910390fd5b61313585613279565b6131a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b602083106131f657805182526020820191506020810190506020830392506131d3565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114613258576040519150601f19603f3d011682016040523d82523d6000602084013e61325d565b606091505b509150915061326d82828661328c565b92505050949350505050565b600080823b905060008111915050919050565b6060831561329c57829050613351565b6000835111156132af5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156133165780820151818401526020810190506132fb565b50505050905090810190601f1680156133435780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b9392505050565b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152602001600081525090565b6000813590506133ac81613df1565b92915050565b6000819050826020600302820111156133ca57600080fd5b92915050565b6000819050826020600302820111156133e857600080fd5b92915050565b6000815190506133fd81613e08565b92915050565b60008135905061341281613e1f565b92915050565b60008135905061342781613e36565b92915050565b60008151905061343c81613e36565b92915050565b60006020828403121561345457600080fd5b60006134628482850161339d565b91505092915050565b6000806040838503121561347e57600080fd5b600061348c8582860161339d565b925050602061349d8582860161339d565b9150509250929050565b6000806000606084860312156134bc57600080fd5b60006134ca8682870161339d565b93505060206134db8682870161339d565b92505060406134ec8682870161339d565b9150509250925092565b600080600080610100858703121561350d57600080fd5b600061351b8782880161339d565b945050602061352c878288016133b2565b935050608061353d878288016133d0565b92505060e061354e87828801613418565b91505092959194509250565b6000806040838503121561356d57600080fd5b600061357b8582860161339d565b925050602061358c85828601613418565b9150509250929050565b6000602082840312156135a857600080fd5b60006135b6848285016133ee565b91505092915050565b6000602082840312156135d157600080fd5b60006135df84828501613403565b91505092915050565b600080604083850312156135fb57600080fd5b600061360985828601613403565b925050602061361a8582860161339d565b9150509250929050565b6000806040838503121561363757600080fd5b600061364585828601613403565b925050602061365685828601613418565b9150509250929050565b60006020828403121561367257600080fd5b60006136808482850161342d565b91505092915050565b600061369583836136a1565b60208301905092915050565b6136aa81613d8d565b82525050565b6136b981613d8d565b82525050565b60006136ca82613d53565b6136d48185613d6b565b93506136df83613d43565b8060005b838110156137105781516136f78882613689565b975061370283613d5e565b9250506001810190506136e3565b5085935050505092915050565b61372681613d9f565b82525050565b61373581613dab565b82525050565b61374481613ddf565b82525050565b6000613757602683613d7c565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006137bd602983613d7c565b91507f56455354494e473a204572726f722063616c6c696e672077697468647261774660008301527f726f6d53747265616d00000000000000000000000000000000000000000000006020830152604082019050919050565b6000613823601d83613d7c565b91507f56455354494e473a20706572696f642063616e2774206265207a65726f0000006000830152602082019050919050565b6000613863602083613d7c565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006138a3602083613d7c565b91507f56455354494e473a20696e76616c69642076657374696e6720616464726573736000830152602082019050919050565b60006138e3601583613d7c565b91507f56455354494e473a204f6e6c792063726561746f7200000000000000000000006000830152602082019050919050565b6000613923602383613d7c565b91507f56455354494e473a204572726f722063616c6c696e672063616e63656c53747260008301527f65616d00000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60a08201600082015161399260008501826136a1565b5060208201516139a560208501826139e4565b5060408201516139b860408501826139e4565b5060608201516139cb60608501826139e4565b5060808201516139de60808501826139e4565b50505050565b6139ed81613dd5565b82525050565b6139fc81613dd5565b82525050565b6000602082019050613a1760008301846136b0565b92915050565b6000604082019050613a3260008301856136b0565b613a3f60208301846136b0565b9392505050565b6000604082019050613a5b60008301856136b0565b613a68602083018461373b565b9392505050565b6000604082019050613a8460008301856136b0565b613a9160208301846139f3565b9392505050565b600060a082019050613aad60008301886136b0565b613aba60208301876139f3565b613ac760408301866136b0565b613ad460608301856139f3565b613ae160808301846139f3565b9695505050505050565b6000608082019050613b0060008301876136b0565b613b0d60208301866139f3565b613b1a60408301856139f3565b613b2760608301846139f3565b95945050505050565b600060a082019050613b4560008301886136b0565b613b5260208301876139f3565b613b5f60408301866139f3565b613b6c60608301856139f3565b613b7960808301846139f3565b9695505050505050565b60006020820190508181036000830152613b9d81846136bf565b905092915050565b6000602082019050613bba600083018461371d565b92915050565b6000602082019050613bd5600083018461372c565b92915050565b60006020820190508181036000830152613bf48161374a565b9050919050565b60006020820190508181036000830152613c14816137b0565b9050919050565b60006020820190508181036000830152613c3481613816565b9050919050565b60006020820190508181036000830152613c5481613856565b9050919050565b60006020820190508181036000830152613c7481613896565b9050919050565b60006020820190508181036000830152613c94816138d6565b9050919050565b60006020820190508181036000830152613cb481613916565b9050919050565b600060a082019050613cd0600083018461397c565b92915050565b6000602082019050613ceb60008301846139f3565b92915050565b6000604082019050613d0660008301856139f3565b613d1360208301846136b0565b9392505050565b6000604082019050613d2f60008301856139f3565b613d3c60208301846139f3565b9392505050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000613d9882613db5565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000613dea82613dd5565b9050919050565b613dfa81613d8d565b8114613e0557600080fd5b50565b613e1181613d9f565b8114613e1c57600080fd5b50565b613e2881613dab565b8114613e3357600080fd5b50565b613e3f81613dd5565b8114613e4a57600080fd5b5056fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e74416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f775361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a264697066735822122046fa298bb520a70221de408eb4f77374bcf1101e2023281a8a7c08f5c4c8052064736f6c63430007060033",
}

// TokenVestingABI is the input ABI used to generate the binding from.
// Deprecated: Use TokenVestingMetaData.ABI instead.
var TokenVestingABI = TokenVestingMetaData.ABI

// TokenVestingBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use TokenVestingMetaData.Bin instead.
var TokenVestingBin = TokenVestingMetaData.Bin

// DeployTokenVesting deploys a new Ethereum contract, binding an instance of TokenVesting to it.
func DeployTokenVesting(auth *bind.TransactOpts, backend bind.ContractBackend, newOwner common.Address) (common.Address, *types.Transaction, *TokenVesting, error) {
	parsed, err := TokenVestingMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(TokenVestingBin), backend, newOwner)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &TokenVesting{TokenVestingCaller: TokenVestingCaller{contract: contract}, TokenVestingTransactor: TokenVestingTransactor{contract: contract}, TokenVestingFilterer: TokenVestingFilterer{contract: contract}}, nil
}

// TokenVesting is an auto generated Go binding around an Ethereum contract.
type TokenVesting struct {
	TokenVestingCaller     // Read-only binding to the contract
	TokenVestingTransactor // Write-only binding to the contract
	TokenVestingFilterer   // Log filterer for contract events
}

// TokenVestingCaller is an auto generated read-only Go binding around an Ethereum contract.
type TokenVestingCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TokenVestingTransactor is an auto generated write-only Go binding around an Ethereum contract.
type TokenVestingTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TokenVestingFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type TokenVestingFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TokenVestingSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type TokenVestingSession struct {
	Contract     *TokenVesting     // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// TokenVestingCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type TokenVestingCallerSession struct {
	Contract *TokenVestingCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts       // Call options to use throughout this session
}

// TokenVestingTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type TokenVestingTransactorSession struct {
	Contract     *TokenVestingTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts       // Transaction auth options to use throughout this session
}

// TokenVestingRaw is an auto generated low-level Go binding around an Ethereum contract.
type TokenVestingRaw struct {
	Contract *TokenVesting // Generic contract binding to access the raw methods on
}

// TokenVestingCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type TokenVestingCallerRaw struct {
	Contract *TokenVestingCaller // Generic read-only contract binding to access the raw methods on
}

// TokenVestingTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type TokenVestingTransactorRaw struct {
	Contract *TokenVestingTransactor // Generic write-only contract binding to access the raw methods on
}

// NewTokenVesting creates a new instance of TokenVesting, bound to a specific deployed contract.
func NewTokenVesting(address common.Address, backend bind.ContractBackend) (*TokenVesting, error) {
	contract, err := bindTokenVesting(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &TokenVesting{TokenVestingCaller: TokenVestingCaller{contract: contract}, TokenVestingTransactor: TokenVestingTransactor{contract: contract}, TokenVestingFilterer: TokenVestingFilterer{contract: contract}}, nil
}

// NewTokenVestingCaller creates a new read-only instance of TokenVesting, bound to a specific deployed contract.
func NewTokenVestingCaller(address common.Address, caller bind.ContractCaller) (*TokenVestingCaller, error) {
	contract, err := bindTokenVesting(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &TokenVestingCaller{contract: contract}, nil
}

// NewTokenVestingTransactor creates a new write-only instance of TokenVesting, bound to a specific deployed contract.
func NewTokenVestingTransactor(address common.Address, transactor bind.ContractTransactor) (*TokenVestingTransactor, error) {
	contract, err := bindTokenVesting(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &TokenVestingTransactor{contract: contract}, nil
}

// NewTokenVestingFilterer creates a new log filterer instance of TokenVesting, bound to a specific deployed contract.
func NewTokenVestingFilterer(address common.Address, filterer bind.ContractFilterer) (*TokenVestingFilterer, error) {
	contract, err := bindTokenVesting(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &TokenVestingFilterer{contract: contract}, nil
}

// bindTokenVesting binds a generic wrapper to an already deployed contract.
func bindTokenVesting(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(TokenVestingABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_TokenVesting *TokenVestingRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _TokenVesting.Contract.TokenVestingCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_TokenVesting *TokenVestingRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TokenVesting.Contract.TokenVestingTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_TokenVesting *TokenVestingRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _TokenVesting.Contract.TokenVestingTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_TokenVesting *TokenVestingCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _TokenVesting.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_TokenVesting *TokenVestingTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TokenVesting.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_TokenVesting *TokenVestingTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _TokenVesting.Contract.contract.Transact(opts, method, params...)
}

// DAYSINSECONDS is a free data retrieval call binding the contract method 0xe1762ef3.
//
// Solidity: function DAYS_IN_SECONDS() view returns(uint256)
func (_TokenVesting *TokenVestingCaller) DAYSINSECONDS(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _TokenVesting.contract.Call(opts, &out, "DAYS_IN_SECONDS")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// DAYSINSECONDS is a free data retrieval call binding the contract method 0xe1762ef3.
//
// Solidity: function DAYS_IN_SECONDS() view returns(uint256)
func (_TokenVesting *TokenVestingSession) DAYSINSECONDS() (*big.Int, error) {
	return _TokenVesting.Contract.DAYSINSECONDS(&_TokenVesting.CallOpts)
}

// DAYSINSECONDS is a free data retrieval call binding the contract method 0xe1762ef3.
//
// Solidity: function DAYS_IN_SECONDS() view returns(uint256)
func (_TokenVesting *TokenVestingCallerSession) DAYSINSECONDS() (*big.Int, error) {
	return _TokenVesting.Contract.DAYSINSECONDS(&_TokenVesting.CallOpts)
}

// DEFAULTADMINROLE is a free data retrieval call binding the contract method 0xa217fddf.
//
// Solidity: function DEFAULT_ADMIN_ROLE() view returns(bytes32)
func (_TokenVesting *TokenVestingCaller) DEFAULTADMINROLE(opts *bind.CallOpts) ([32]byte, error) {
	var out []interface{}
	err := _TokenVesting.contract.Call(opts, &out, "DEFAULT_ADMIN_ROLE")

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// DEFAULTADMINROLE is a free data retrieval call binding the contract method 0xa217fddf.
//
// Solidity: function DEFAULT_ADMIN_ROLE() view returns(bytes32)
func (_TokenVesting *TokenVestingSession) DEFAULTADMINROLE() ([32]byte, error) {
	return _TokenVesting.Contract.DEFAULTADMINROLE(&_TokenVesting.CallOpts)
}

// DEFAULTADMINROLE is a free data retrieval call binding the contract method 0xa217fddf.
//
// Solidity: function DEFAULT_ADMIN_ROLE() view returns(bytes32)
func (_TokenVesting *TokenVestingCallerSession) DEFAULTADMINROLE() ([32]byte, error) {
	return _TokenVesting.Contract.DEFAULTADMINROLE(&_TokenVesting.CallOpts)
}

// Beneficiaries is a free data retrieval call binding the contract method 0x529849e9.
//
// Solidity: function beneficiaries(address , uint256 ) view returns(address beneficiary, uint256 proportion, uint256 streamId, uint256 remaining)
func (_TokenVesting *TokenVestingCaller) Beneficiaries(opts *bind.CallOpts, arg0 common.Address, arg1 *big.Int) (struct {
	Beneficiary common.Address
	Proportion  *big.Int
	StreamId    *big.Int
	Remaining   *big.Int
}, error) {
	var out []interface{}
	err := _TokenVesting.contract.Call(opts, &out, "beneficiaries", arg0, arg1)

	outstruct := new(struct {
		Beneficiary common.Address
		Proportion  *big.Int
		StreamId    *big.Int
		Remaining   *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Beneficiary = *abi.ConvertType(out[0], new(common.Address)).(*common.Address)
	outstruct.Proportion = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.StreamId = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)
	outstruct.Remaining = *abi.ConvertType(out[3], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// Beneficiaries is a free data retrieval call binding the contract method 0x529849e9.
//
// Solidity: function beneficiaries(address , uint256 ) view returns(address beneficiary, uint256 proportion, uint256 streamId, uint256 remaining)
func (_TokenVesting *TokenVestingSession) Beneficiaries(arg0 common.Address, arg1 *big.Int) (struct {
	Beneficiary common.Address
	Proportion  *big.Int
	StreamId    *big.Int
	Remaining   *big.Int
}, error) {
	return _TokenVesting.Contract.Beneficiaries(&_TokenVesting.CallOpts, arg0, arg1)
}

// Beneficiaries is a free data retrieval call binding the contract method 0x529849e9.
//
// Solidity: function beneficiaries(address , uint256 ) view returns(address beneficiary, uint256 proportion, uint256 streamId, uint256 remaining)
func (_TokenVesting *TokenVestingCallerSession) Beneficiaries(arg0 common.Address, arg1 *big.Int) (struct {
	Beneficiary common.Address
	Proportion  *big.Int
	StreamId    *big.Int
	Remaining   *big.Int
}, error) {
	return _TokenVesting.Contract.Beneficiaries(&_TokenVesting.CallOpts, arg0, arg1)
}

// BeneficiaryTokens is a free data retrieval call binding the contract method 0x47a9d145.
//
// Solidity: function beneficiaryTokens(address , uint256 ) view returns(address)
func (_TokenVesting *TokenVestingCaller) BeneficiaryTokens(opts *bind.CallOpts, arg0 common.Address, arg1 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _TokenVesting.contract.Call(opts, &out, "beneficiaryTokens", arg0, arg1)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// BeneficiaryTokens is a free data retrieval call binding the contract method 0x47a9d145.
//
// Solidity: function beneficiaryTokens(address , uint256 ) view returns(address)
func (_TokenVesting *TokenVestingSession) BeneficiaryTokens(arg0 common.Address, arg1 *big.Int) (common.Address, error) {
	return _TokenVesting.Contract.BeneficiaryTokens(&_TokenVesting.CallOpts, arg0, arg1)
}

// BeneficiaryTokens is a free data retrieval call binding the contract method 0x47a9d145.
//
// Solidity: function beneficiaryTokens(address , uint256 ) view returns(address)
func (_TokenVesting *TokenVestingCallerSession) BeneficiaryTokens(arg0 common.Address, arg1 *big.Int) (common.Address, error) {
	return _TokenVesting.Contract.BeneficiaryTokens(&_TokenVesting.CallOpts, arg0, arg1)
}

// GetAllTokensByBeneficiary is a free data retrieval call binding the contract method 0x6d18450a.
//
// Solidity: function getAllTokensByBeneficiary(address _beneficiary) view returns(address[])
func (_TokenVesting *TokenVestingCaller) GetAllTokensByBeneficiary(opts *bind.CallOpts, _beneficiary common.Address) ([]common.Address, error) {
	var out []interface{}
	err := _TokenVesting.contract.Call(opts, &out, "getAllTokensByBeneficiary", _beneficiary)

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetAllTokensByBeneficiary is a free data retrieval call binding the contract method 0x6d18450a.
//
// Solidity: function getAllTokensByBeneficiary(address _beneficiary) view returns(address[])
func (_TokenVesting *TokenVestingSession) GetAllTokensByBeneficiary(_beneficiary common.Address) ([]common.Address, error) {
	return _TokenVesting.Contract.GetAllTokensByBeneficiary(&_TokenVesting.CallOpts, _beneficiary)
}

// GetAllTokensByBeneficiary is a free data retrieval call binding the contract method 0x6d18450a.
//
// Solidity: function getAllTokensByBeneficiary(address _beneficiary) view returns(address[])
func (_TokenVesting *TokenVestingCallerSession) GetAllTokensByBeneficiary(_beneficiary common.Address) ([]common.Address, error) {
	return _TokenVesting.Contract.GetAllTokensByBeneficiary(&_TokenVesting.CallOpts, _beneficiary)
}

// GetRoleAdmin is a free data retrieval call binding the contract method 0x248a9ca3.
//
// Solidity: function getRoleAdmin(bytes32 role) view returns(bytes32)
func (_TokenVesting *TokenVestingCaller) GetRoleAdmin(opts *bind.CallOpts, role [32]byte) ([32]byte, error) {
	var out []interface{}
	err := _TokenVesting.contract.Call(opts, &out, "getRoleAdmin", role)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// GetRoleAdmin is a free data retrieval call binding the contract method 0x248a9ca3.
//
// Solidity: function getRoleAdmin(bytes32 role) view returns(bytes32)
func (_TokenVesting *TokenVestingSession) GetRoleAdmin(role [32]byte) ([32]byte, error) {
	return _TokenVesting.Contract.GetRoleAdmin(&_TokenVesting.CallOpts, role)
}

// GetRoleAdmin is a free data retrieval call binding the contract method 0x248a9ca3.
//
// Solidity: function getRoleAdmin(bytes32 role) view returns(bytes32)
func (_TokenVesting *TokenVestingCallerSession) GetRoleAdmin(role [32]byte) ([32]byte, error) {
	return _TokenVesting.Contract.GetRoleAdmin(&_TokenVesting.CallOpts, role)
}

// GetRoleMember is a free data retrieval call binding the contract method 0x9010d07c.
//
// Solidity: function getRoleMember(bytes32 role, uint256 index) view returns(address)
func (_TokenVesting *TokenVestingCaller) GetRoleMember(opts *bind.CallOpts, role [32]byte, index *big.Int) (common.Address, error) {
	var out []interface{}
	err := _TokenVesting.contract.Call(opts, &out, "getRoleMember", role, index)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetRoleMember is a free data retrieval call binding the contract method 0x9010d07c.
//
// Solidity: function getRoleMember(bytes32 role, uint256 index) view returns(address)
func (_TokenVesting *TokenVestingSession) GetRoleMember(role [32]byte, index *big.Int) (common.Address, error) {
	return _TokenVesting.Contract.GetRoleMember(&_TokenVesting.CallOpts, role, index)
}

// GetRoleMember is a free data retrieval call binding the contract method 0x9010d07c.
//
// Solidity: function getRoleMember(bytes32 role, uint256 index) view returns(address)
func (_TokenVesting *TokenVestingCallerSession) GetRoleMember(role [32]byte, index *big.Int) (common.Address, error) {
	return _TokenVesting.Contract.GetRoleMember(&_TokenVesting.CallOpts, role, index)
}

// GetRoleMemberCount is a free data retrieval call binding the contract method 0xca15c873.
//
// Solidity: function getRoleMemberCount(bytes32 role) view returns(uint256)
func (_TokenVesting *TokenVestingCaller) GetRoleMemberCount(opts *bind.CallOpts, role [32]byte) (*big.Int, error) {
	var out []interface{}
	err := _TokenVesting.contract.Call(opts, &out, "getRoleMemberCount", role)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetRoleMemberCount is a free data retrieval call binding the contract method 0xca15c873.
//
// Solidity: function getRoleMemberCount(bytes32 role) view returns(uint256)
func (_TokenVesting *TokenVestingSession) GetRoleMemberCount(role [32]byte) (*big.Int, error) {
	return _TokenVesting.Contract.GetRoleMemberCount(&_TokenVesting.CallOpts, role)
}

// GetRoleMemberCount is a free data retrieval call binding the contract method 0xca15c873.
//
// Solidity: function getRoleMemberCount(bytes32 role) view returns(uint256)
func (_TokenVesting *TokenVestingCallerSession) GetRoleMemberCount(role [32]byte) (*big.Int, error) {
	return _TokenVesting.Contract.GetRoleMemberCount(&_TokenVesting.CallOpts, role)
}

// GetVestingInfo is a free data retrieval call binding the contract method 0xfb897ce4.
//
// Solidity: function getVestingInfo(address _token) view returns((address,uint256,uint256,uint256,uint256))
func (_TokenVesting *TokenVestingCaller) GetVestingInfo(opts *bind.CallOpts, _token common.Address) (ITokenVestingVestingInfo, error) {
	var out []interface{}
	err := _TokenVesting.contract.Call(opts, &out, "getVestingInfo", _token)

	if err != nil {
		return *new(ITokenVestingVestingInfo), err
	}

	out0 := *abi.ConvertType(out[0], new(ITokenVestingVestingInfo)).(*ITokenVestingVestingInfo)

	return out0, err

}

// GetVestingInfo is a free data retrieval call binding the contract method 0xfb897ce4.
//
// Solidity: function getVestingInfo(address _token) view returns((address,uint256,uint256,uint256,uint256))
func (_TokenVesting *TokenVestingSession) GetVestingInfo(_token common.Address) (ITokenVestingVestingInfo, error) {
	return _TokenVesting.Contract.GetVestingInfo(&_TokenVesting.CallOpts, _token)
}

// GetVestingInfo is a free data retrieval call binding the contract method 0xfb897ce4.
//
// Solidity: function getVestingInfo(address _token) view returns((address,uint256,uint256,uint256,uint256))
func (_TokenVesting *TokenVestingCallerSession) GetVestingInfo(_token common.Address) (ITokenVestingVestingInfo, error) {
	return _TokenVesting.Contract.GetVestingInfo(&_TokenVesting.CallOpts, _token)
}

// HasRole is a free data retrieval call binding the contract method 0x91d14854.
//
// Solidity: function hasRole(bytes32 role, address account) view returns(bool)
func (_TokenVesting *TokenVestingCaller) HasRole(opts *bind.CallOpts, role [32]byte, account common.Address) (bool, error) {
	var out []interface{}
	err := _TokenVesting.contract.Call(opts, &out, "hasRole", role, account)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// HasRole is a free data retrieval call binding the contract method 0x91d14854.
//
// Solidity: function hasRole(bytes32 role, address account) view returns(bool)
func (_TokenVesting *TokenVestingSession) HasRole(role [32]byte, account common.Address) (bool, error) {
	return _TokenVesting.Contract.HasRole(&_TokenVesting.CallOpts, role, account)
}

// HasRole is a free data retrieval call binding the contract method 0x91d14854.
//
// Solidity: function hasRole(bytes32 role, address account) view returns(bool)
func (_TokenVesting *TokenVestingCallerSession) HasRole(role [32]byte, account common.Address) (bool, error) {
	return _TokenVesting.Contract.HasRole(&_TokenVesting.CallOpts, role, account)
}

// ReleaseableAmount is a free data retrieval call binding the contract method 0x42e16161.
//
// Solidity: function releaseableAmount(address _token) view returns(uint256)
func (_TokenVesting *TokenVestingCaller) ReleaseableAmount(opts *bind.CallOpts, _token common.Address) (*big.Int, error) {
	var out []interface{}
	err := _TokenVesting.contract.Call(opts, &out, "releaseableAmount", _token)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// ReleaseableAmount is a free data retrieval call binding the contract method 0x42e16161.
//
// Solidity: function releaseableAmount(address _token) view returns(uint256)
func (_TokenVesting *TokenVestingSession) ReleaseableAmount(_token common.Address) (*big.Int, error) {
	return _TokenVesting.Contract.ReleaseableAmount(&_TokenVesting.CallOpts, _token)
}

// ReleaseableAmount is a free data retrieval call binding the contract method 0x42e16161.
//
// Solidity: function releaseableAmount(address _token) view returns(uint256)
func (_TokenVesting *TokenVestingCallerSession) ReleaseableAmount(_token common.Address) (*big.Int, error) {
	return _TokenVesting.Contract.ReleaseableAmount(&_TokenVesting.CallOpts, _token)
}

// ReleaseableAmountByAddress is a free data retrieval call binding the contract method 0x4020925a.
//
// Solidity: function releaseableAmountByAddress(address _token, address _beneficiary) view returns(uint256)
func (_TokenVesting *TokenVestingCaller) ReleaseableAmountByAddress(opts *bind.CallOpts, _token common.Address, _beneficiary common.Address) (*big.Int, error) {
	var out []interface{}
	err := _TokenVesting.contract.Call(opts, &out, "releaseableAmountByAddress", _token, _beneficiary)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// ReleaseableAmountByAddress is a free data retrieval call binding the contract method 0x4020925a.
//
// Solidity: function releaseableAmountByAddress(address _token, address _beneficiary) view returns(uint256)
func (_TokenVesting *TokenVestingSession) ReleaseableAmountByAddress(_token common.Address, _beneficiary common.Address) (*big.Int, error) {
	return _TokenVesting.Contract.ReleaseableAmountByAddress(&_TokenVesting.CallOpts, _token, _beneficiary)
}

// ReleaseableAmountByAddress is a free data retrieval call binding the contract method 0x4020925a.
//
// Solidity: function releaseableAmountByAddress(address _token, address _beneficiary) view returns(uint256)
func (_TokenVesting *TokenVestingCallerSession) ReleaseableAmountByAddress(_token common.Address, _beneficiary common.Address) (*big.Int, error) {
	return _TokenVesting.Contract.ReleaseableAmountByAddress(&_TokenVesting.CallOpts, _token, _beneficiary)
}

// VestedAmount is a free data retrieval call binding the contract method 0x384711cc.
//
// Solidity: function vestedAmount(address _token) view returns(uint256)
func (_TokenVesting *TokenVestingCaller) VestedAmount(opts *bind.CallOpts, _token common.Address) (*big.Int, error) {
	var out []interface{}
	err := _TokenVesting.contract.Call(opts, &out, "vestedAmount", _token)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// VestedAmount is a free data retrieval call binding the contract method 0x384711cc.
//
// Solidity: function vestedAmount(address _token) view returns(uint256)
func (_TokenVesting *TokenVestingSession) VestedAmount(_token common.Address) (*big.Int, error) {
	return _TokenVesting.Contract.VestedAmount(&_TokenVesting.CallOpts, _token)
}

// VestedAmount is a free data retrieval call binding the contract method 0x384711cc.
//
// Solidity: function vestedAmount(address _token) view returns(uint256)
func (_TokenVesting *TokenVestingCallerSession) VestedAmount(_token common.Address) (*big.Int, error) {
	return _TokenVesting.Contract.VestedAmount(&_TokenVesting.CallOpts, _token)
}

// VestingInfo is a free data retrieval call binding the contract method 0xf78e633d.
//
// Solidity: function vestingInfo(address ) view returns(address vestingBeneficiary, uint256 totalBalance, uint256 beneficiariesCount, uint256 start, uint256 stop)
func (_TokenVesting *TokenVestingCaller) VestingInfo(opts *bind.CallOpts, arg0 common.Address) (struct {
	VestingBeneficiary common.Address
	TotalBalance       *big.Int
	BeneficiariesCount *big.Int
	Start              *big.Int
	Stop               *big.Int
}, error) {
	var out []interface{}
	err := _TokenVesting.contract.Call(opts, &out, "vestingInfo", arg0)

	outstruct := new(struct {
		VestingBeneficiary common.Address
		TotalBalance       *big.Int
		BeneficiariesCount *big.Int
		Start              *big.Int
		Stop               *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.VestingBeneficiary = *abi.ConvertType(out[0], new(common.Address)).(*common.Address)
	outstruct.TotalBalance = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	outstruct.BeneficiariesCount = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)
	outstruct.Start = *abi.ConvertType(out[3], new(*big.Int)).(**big.Int)
	outstruct.Stop = *abi.ConvertType(out[4], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// VestingInfo is a free data retrieval call binding the contract method 0xf78e633d.
//
// Solidity: function vestingInfo(address ) view returns(address vestingBeneficiary, uint256 totalBalance, uint256 beneficiariesCount, uint256 start, uint256 stop)
func (_TokenVesting *TokenVestingSession) VestingInfo(arg0 common.Address) (struct {
	VestingBeneficiary common.Address
	TotalBalance       *big.Int
	BeneficiariesCount *big.Int
	Start              *big.Int
	Stop               *big.Int
}, error) {
	return _TokenVesting.Contract.VestingInfo(&_TokenVesting.CallOpts, arg0)
}

// VestingInfo is a free data retrieval call binding the contract method 0xf78e633d.
//
// Solidity: function vestingInfo(address ) view returns(address vestingBeneficiary, uint256 totalBalance, uint256 beneficiariesCount, uint256 start, uint256 stop)
func (_TokenVesting *TokenVestingCallerSession) VestingInfo(arg0 common.Address) (struct {
	VestingBeneficiary common.Address
	TotalBalance       *big.Int
	BeneficiariesCount *big.Int
	Start              *big.Int
	Stop               *big.Int
}, error) {
	return _TokenVesting.Contract.VestingInfo(&_TokenVesting.CallOpts, arg0)
}

// AddToken is a paid mutator transaction binding the contract method 0xc25e888f.
//
// Solidity: function addToken(address _token, address[3] _beneficiaries, uint256[3] _proportions, uint256 _vestingPeriodInDays) returns()
func (_TokenVesting *TokenVestingTransactor) AddToken(opts *bind.TransactOpts, _token common.Address, _beneficiaries [3]common.Address, _proportions [3]*big.Int, _vestingPeriodInDays *big.Int) (*types.Transaction, error) {
	return _TokenVesting.contract.Transact(opts, "addToken", _token, _beneficiaries, _proportions, _vestingPeriodInDays)
}

// AddToken is a paid mutator transaction binding the contract method 0xc25e888f.
//
// Solidity: function addToken(address _token, address[3] _beneficiaries, uint256[3] _proportions, uint256 _vestingPeriodInDays) returns()
func (_TokenVesting *TokenVestingSession) AddToken(_token common.Address, _beneficiaries [3]common.Address, _proportions [3]*big.Int, _vestingPeriodInDays *big.Int) (*types.Transaction, error) {
	return _TokenVesting.Contract.AddToken(&_TokenVesting.TransactOpts, _token, _beneficiaries, _proportions, _vestingPeriodInDays)
}

// AddToken is a paid mutator transaction binding the contract method 0xc25e888f.
//
// Solidity: function addToken(address _token, address[3] _beneficiaries, uint256[3] _proportions, uint256 _vestingPeriodInDays) returns()
func (_TokenVesting *TokenVestingTransactorSession) AddToken(_token common.Address, _beneficiaries [3]common.Address, _proportions [3]*big.Int, _vestingPeriodInDays *big.Int) (*types.Transaction, error) {
	return _TokenVesting.Contract.AddToken(&_TokenVesting.TransactOpts, _token, _beneficiaries, _proportions, _vestingPeriodInDays)
}

// GrantRole is a paid mutator transaction binding the contract method 0x2f2ff15d.
//
// Solidity: function grantRole(bytes32 role, address account) returns()
func (_TokenVesting *TokenVestingTransactor) GrantRole(opts *bind.TransactOpts, role [32]byte, account common.Address) (*types.Transaction, error) {
	return _TokenVesting.contract.Transact(opts, "grantRole", role, account)
}

// GrantRole is a paid mutator transaction binding the contract method 0x2f2ff15d.
//
// Solidity: function grantRole(bytes32 role, address account) returns()
func (_TokenVesting *TokenVestingSession) GrantRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _TokenVesting.Contract.GrantRole(&_TokenVesting.TransactOpts, role, account)
}

// GrantRole is a paid mutator transaction binding the contract method 0x2f2ff15d.
//
// Solidity: function grantRole(bytes32 role, address account) returns()
func (_TokenVesting *TokenVestingTransactorSession) GrantRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _TokenVesting.Contract.GrantRole(&_TokenVesting.TransactOpts, role, account)
}

// Release is a paid mutator transaction binding the contract method 0x48b75044.
//
// Solidity: function release(address _token, address _beneficiary) returns()
func (_TokenVesting *TokenVestingTransactor) Release(opts *bind.TransactOpts, _token common.Address, _beneficiary common.Address) (*types.Transaction, error) {
	return _TokenVesting.contract.Transact(opts, "release", _token, _beneficiary)
}

// Release is a paid mutator transaction binding the contract method 0x48b75044.
//
// Solidity: function release(address _token, address _beneficiary) returns()
func (_TokenVesting *TokenVestingSession) Release(_token common.Address, _beneficiary common.Address) (*types.Transaction, error) {
	return _TokenVesting.Contract.Release(&_TokenVesting.TransactOpts, _token, _beneficiary)
}

// Release is a paid mutator transaction binding the contract method 0x48b75044.
//
// Solidity: function release(address _token, address _beneficiary) returns()
func (_TokenVesting *TokenVestingTransactorSession) Release(_token common.Address, _beneficiary common.Address) (*types.Transaction, error) {
	return _TokenVesting.Contract.Release(&_TokenVesting.TransactOpts, _token, _beneficiary)
}

// ReleaseAll is a paid mutator transaction binding the contract method 0x580fc80a.
//
// Solidity: function releaseAll(address _beneficiary) returns()
func (_TokenVesting *TokenVestingTransactor) ReleaseAll(opts *bind.TransactOpts, _beneficiary common.Address) (*types.Transaction, error) {
	return _TokenVesting.contract.Transact(opts, "releaseAll", _beneficiary)
}

// ReleaseAll is a paid mutator transaction binding the contract method 0x580fc80a.
//
// Solidity: function releaseAll(address _beneficiary) returns()
func (_TokenVesting *TokenVestingSession) ReleaseAll(_beneficiary common.Address) (*types.Transaction, error) {
	return _TokenVesting.Contract.ReleaseAll(&_TokenVesting.TransactOpts, _beneficiary)
}

// ReleaseAll is a paid mutator transaction binding the contract method 0x580fc80a.
//
// Solidity: function releaseAll(address _beneficiary) returns()
func (_TokenVesting *TokenVestingTransactorSession) ReleaseAll(_beneficiary common.Address) (*types.Transaction, error) {
	return _TokenVesting.Contract.ReleaseAll(&_TokenVesting.TransactOpts, _beneficiary)
}

// RenounceRole is a paid mutator transaction binding the contract method 0x36568abe.
//
// Solidity: function renounceRole(bytes32 role, address account) returns()
func (_TokenVesting *TokenVestingTransactor) RenounceRole(opts *bind.TransactOpts, role [32]byte, account common.Address) (*types.Transaction, error) {
	return _TokenVesting.contract.Transact(opts, "renounceRole", role, account)
}

// RenounceRole is a paid mutator transaction binding the contract method 0x36568abe.
//
// Solidity: function renounceRole(bytes32 role, address account) returns()
func (_TokenVesting *TokenVestingSession) RenounceRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _TokenVesting.Contract.RenounceRole(&_TokenVesting.TransactOpts, role, account)
}

// RenounceRole is a paid mutator transaction binding the contract method 0x36568abe.
//
// Solidity: function renounceRole(bytes32 role, address account) returns()
func (_TokenVesting *TokenVestingTransactorSession) RenounceRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _TokenVesting.Contract.RenounceRole(&_TokenVesting.TransactOpts, role, account)
}

// RevokeRole is a paid mutator transaction binding the contract method 0xd547741f.
//
// Solidity: function revokeRole(bytes32 role, address account) returns()
func (_TokenVesting *TokenVestingTransactor) RevokeRole(opts *bind.TransactOpts, role [32]byte, account common.Address) (*types.Transaction, error) {
	return _TokenVesting.contract.Transact(opts, "revokeRole", role, account)
}

// RevokeRole is a paid mutator transaction binding the contract method 0xd547741f.
//
// Solidity: function revokeRole(bytes32 role, address account) returns()
func (_TokenVesting *TokenVestingSession) RevokeRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _TokenVesting.Contract.RevokeRole(&_TokenVesting.TransactOpts, role, account)
}

// RevokeRole is a paid mutator transaction binding the contract method 0xd547741f.
//
// Solidity: function revokeRole(bytes32 role, address account) returns()
func (_TokenVesting *TokenVestingTransactorSession) RevokeRole(role [32]byte, account common.Address) (*types.Transaction, error) {
	return _TokenVesting.Contract.RevokeRole(&_TokenVesting.TransactOpts, role, account)
}

// SetSablier is a paid mutator transaction binding the contract method 0x90096556.
//
// Solidity: function setSablier(address _sablier) returns()
func (_TokenVesting *TokenVestingTransactor) SetSablier(opts *bind.TransactOpts, _sablier common.Address) (*types.Transaction, error) {
	return _TokenVesting.contract.Transact(opts, "setSablier", _sablier)
}

// SetSablier is a paid mutator transaction binding the contract method 0x90096556.
//
// Solidity: function setSablier(address _sablier) returns()
func (_TokenVesting *TokenVestingSession) SetSablier(_sablier common.Address) (*types.Transaction, error) {
	return _TokenVesting.Contract.SetSablier(&_TokenVesting.TransactOpts, _sablier)
}

// SetSablier is a paid mutator transaction binding the contract method 0x90096556.
//
// Solidity: function setSablier(address _sablier) returns()
func (_TokenVesting *TokenVestingTransactorSession) SetSablier(_sablier common.Address) (*types.Transaction, error) {
	return _TokenVesting.Contract.SetSablier(&_TokenVesting.TransactOpts, _sablier)
}

// SetVestingAddress is a paid mutator transaction binding the contract method 0xd2e836f8.
//
// Solidity: function setVestingAddress(address _vestingBeneficiary, address _token, address _newVestingBeneficiary) returns()
func (_TokenVesting *TokenVestingTransactor) SetVestingAddress(opts *bind.TransactOpts, _vestingBeneficiary common.Address, _token common.Address, _newVestingBeneficiary common.Address) (*types.Transaction, error) {
	return _TokenVesting.contract.Transact(opts, "setVestingAddress", _vestingBeneficiary, _token, _newVestingBeneficiary)
}

// SetVestingAddress is a paid mutator transaction binding the contract method 0xd2e836f8.
//
// Solidity: function setVestingAddress(address _vestingBeneficiary, address _token, address _newVestingBeneficiary) returns()
func (_TokenVesting *TokenVestingSession) SetVestingAddress(_vestingBeneficiary common.Address, _token common.Address, _newVestingBeneficiary common.Address) (*types.Transaction, error) {
	return _TokenVesting.Contract.SetVestingAddress(&_TokenVesting.TransactOpts, _vestingBeneficiary, _token, _newVestingBeneficiary)
}

// SetVestingAddress is a paid mutator transaction binding the contract method 0xd2e836f8.
//
// Solidity: function setVestingAddress(address _vestingBeneficiary, address _token, address _newVestingBeneficiary) returns()
func (_TokenVesting *TokenVestingTransactorSession) SetVestingAddress(_vestingBeneficiary common.Address, _token common.Address, _newVestingBeneficiary common.Address) (*types.Transaction, error) {
	return _TokenVesting.Contract.SetVestingAddress(&_TokenVesting.TransactOpts, _vestingBeneficiary, _token, _newVestingBeneficiary)
}

// SetVestingReferral is a paid mutator transaction binding the contract method 0x0c0cf20b.
//
// Solidity: function setVestingReferral(address _vestingBeneficiary, address _token, address _vestingReferral) returns()
func (_TokenVesting *TokenVestingTransactor) SetVestingReferral(opts *bind.TransactOpts, _vestingBeneficiary common.Address, _token common.Address, _vestingReferral common.Address) (*types.Transaction, error) {
	return _TokenVesting.contract.Transact(opts, "setVestingReferral", _vestingBeneficiary, _token, _vestingReferral)
}

// SetVestingReferral is a paid mutator transaction binding the contract method 0x0c0cf20b.
//
// Solidity: function setVestingReferral(address _vestingBeneficiary, address _token, address _vestingReferral) returns()
func (_TokenVesting *TokenVestingSession) SetVestingReferral(_vestingBeneficiary common.Address, _token common.Address, _vestingReferral common.Address) (*types.Transaction, error) {
	return _TokenVesting.Contract.SetVestingReferral(&_TokenVesting.TransactOpts, _vestingBeneficiary, _token, _vestingReferral)
}

// SetVestingReferral is a paid mutator transaction binding the contract method 0x0c0cf20b.
//
// Solidity: function setVestingReferral(address _vestingBeneficiary, address _token, address _vestingReferral) returns()
func (_TokenVesting *TokenVestingTransactorSession) SetVestingReferral(_vestingBeneficiary common.Address, _token common.Address, _vestingReferral common.Address) (*types.Transaction, error) {
	return _TokenVesting.Contract.SetVestingReferral(&_TokenVesting.TransactOpts, _vestingBeneficiary, _token, _vestingReferral)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_TokenVesting *TokenVestingTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _TokenVesting.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_TokenVesting *TokenVestingSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _TokenVesting.Contract.TransferOwnership(&_TokenVesting.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_TokenVesting *TokenVestingTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _TokenVesting.Contract.TransferOwnership(&_TokenVesting.TransactOpts, newOwner)
}

// TokenVestingLogBeneficiaryUpdatedIterator is returned from FilterLogBeneficiaryUpdated and is used to iterate over the raw logs and unpacked data for LogBeneficiaryUpdated events raised by the TokenVesting contract.
type TokenVestingLogBeneficiaryUpdatedIterator struct {
	Event *TokenVestingLogBeneficiaryUpdated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TokenVestingLogBeneficiaryUpdatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TokenVestingLogBeneficiaryUpdated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TokenVestingLogBeneficiaryUpdated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TokenVestingLogBeneficiaryUpdatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TokenVestingLogBeneficiaryUpdatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TokenVestingLogBeneficiaryUpdated represents a LogBeneficiaryUpdated event raised by the TokenVesting contract.
type TokenVestingLogBeneficiaryUpdated struct {
	Token              common.Address
	VestingBeneficiary common.Address
	Raw                types.Log // Blockchain specific contextual infos
}

// FilterLogBeneficiaryUpdated is a free log retrieval operation binding the contract event 0x276dd15f31f6b99d62254388504662bee969db7d6766172c0ff60f8576f09453.
//
// Solidity: event LogBeneficiaryUpdated(address indexed token, address vestingBeneficiary)
func (_TokenVesting *TokenVestingFilterer) FilterLogBeneficiaryUpdated(opts *bind.FilterOpts, token []common.Address) (*TokenVestingLogBeneficiaryUpdatedIterator, error) {

	var tokenRule []interface{}
	for _, tokenItem := range token {
		tokenRule = append(tokenRule, tokenItem)
	}

	logs, sub, err := _TokenVesting.contract.FilterLogs(opts, "LogBeneficiaryUpdated", tokenRule)
	if err != nil {
		return nil, err
	}
	return &TokenVestingLogBeneficiaryUpdatedIterator{contract: _TokenVesting.contract, event: "LogBeneficiaryUpdated", logs: logs, sub: sub}, nil
}

// WatchLogBeneficiaryUpdated is a free log subscription operation binding the contract event 0x276dd15f31f6b99d62254388504662bee969db7d6766172c0ff60f8576f09453.
//
// Solidity: event LogBeneficiaryUpdated(address indexed token, address vestingBeneficiary)
func (_TokenVesting *TokenVestingFilterer) WatchLogBeneficiaryUpdated(opts *bind.WatchOpts, sink chan<- *TokenVestingLogBeneficiaryUpdated, token []common.Address) (event.Subscription, error) {

	var tokenRule []interface{}
	for _, tokenItem := range token {
		tokenRule = append(tokenRule, tokenItem)
	}

	logs, sub, err := _TokenVesting.contract.WatchLogs(opts, "LogBeneficiaryUpdated", tokenRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TokenVestingLogBeneficiaryUpdated)
				if err := _TokenVesting.contract.UnpackLog(event, "LogBeneficiaryUpdated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseLogBeneficiaryUpdated is a log parse operation binding the contract event 0x276dd15f31f6b99d62254388504662bee969db7d6766172c0ff60f8576f09453.
//
// Solidity: event LogBeneficiaryUpdated(address indexed token, address vestingBeneficiary)
func (_TokenVesting *TokenVestingFilterer) ParseLogBeneficiaryUpdated(log types.Log) (*TokenVestingLogBeneficiaryUpdated, error) {
	event := new(TokenVestingLogBeneficiaryUpdated)
	if err := _TokenVesting.contract.UnpackLog(event, "LogBeneficiaryUpdated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TokenVestingLogTokenAddedIterator is returned from FilterLogTokenAdded and is used to iterate over the raw logs and unpacked data for LogTokenAdded events raised by the TokenVesting contract.
type TokenVestingLogTokenAddedIterator struct {
	Event *TokenVestingLogTokenAdded // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TokenVestingLogTokenAddedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TokenVestingLogTokenAdded)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TokenVestingLogTokenAdded)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TokenVestingLogTokenAddedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TokenVestingLogTokenAddedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TokenVestingLogTokenAdded represents a LogTokenAdded event raised by the TokenVesting contract.
type TokenVestingLogTokenAdded struct {
	Token               common.Address
	VestingBeneficiary  common.Address
	VestingPeriodInDays *big.Int
	Raw                 types.Log // Blockchain specific contextual infos
}

// FilterLogTokenAdded is a free log retrieval operation binding the contract event 0x83ded1c585a48e261782bbbc8a77aeb32caff94dc4803fc6c8094721165a5490.
//
// Solidity: event LogTokenAdded(address indexed token, address vestingBeneficiary, uint256 vestingPeriodInDays)
func (_TokenVesting *TokenVestingFilterer) FilterLogTokenAdded(opts *bind.FilterOpts, token []common.Address) (*TokenVestingLogTokenAddedIterator, error) {

	var tokenRule []interface{}
	for _, tokenItem := range token {
		tokenRule = append(tokenRule, tokenItem)
	}

	logs, sub, err := _TokenVesting.contract.FilterLogs(opts, "LogTokenAdded", tokenRule)
	if err != nil {
		return nil, err
	}
	return &TokenVestingLogTokenAddedIterator{contract: _TokenVesting.contract, event: "LogTokenAdded", logs: logs, sub: sub}, nil
}

// WatchLogTokenAdded is a free log subscription operation binding the contract event 0x83ded1c585a48e261782bbbc8a77aeb32caff94dc4803fc6c8094721165a5490.
//
// Solidity: event LogTokenAdded(address indexed token, address vestingBeneficiary, uint256 vestingPeriodInDays)
func (_TokenVesting *TokenVestingFilterer) WatchLogTokenAdded(opts *bind.WatchOpts, sink chan<- *TokenVestingLogTokenAdded, token []common.Address) (event.Subscription, error) {

	var tokenRule []interface{}
	for _, tokenItem := range token {
		tokenRule = append(tokenRule, tokenItem)
	}

	logs, sub, err := _TokenVesting.contract.WatchLogs(opts, "LogTokenAdded", tokenRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TokenVestingLogTokenAdded)
				if err := _TokenVesting.contract.UnpackLog(event, "LogTokenAdded", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseLogTokenAdded is a log parse operation binding the contract event 0x83ded1c585a48e261782bbbc8a77aeb32caff94dc4803fc6c8094721165a5490.
//
// Solidity: event LogTokenAdded(address indexed token, address vestingBeneficiary, uint256 vestingPeriodInDays)
func (_TokenVesting *TokenVestingFilterer) ParseLogTokenAdded(log types.Log) (*TokenVestingLogTokenAdded, error) {
	event := new(TokenVestingLogTokenAdded)
	if err := _TokenVesting.contract.UnpackLog(event, "LogTokenAdded", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TokenVestingReleasedIterator is returned from FilterReleased and is used to iterate over the raw logs and unpacked data for Released events raised by the TokenVesting contract.
type TokenVestingReleasedIterator struct {
	Event *TokenVestingReleased // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TokenVestingReleasedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TokenVestingReleased)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TokenVestingReleased)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TokenVestingReleasedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TokenVestingReleasedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TokenVestingReleased represents a Released event raised by the TokenVesting contract.
type TokenVestingReleased struct {
	Token              common.Address
	VestingBeneficiary common.Address
	Amount             *big.Int
	Raw                types.Log // Blockchain specific contextual infos
}

// FilterReleased is a free log retrieval operation binding the contract event 0x2d87480f50083e2b2759522a8fdda59802650a8055e609a7772cf70c07748f52.
//
// Solidity: event Released(address indexed token, address vestingBeneficiary, uint256 amount)
func (_TokenVesting *TokenVestingFilterer) FilterReleased(opts *bind.FilterOpts, token []common.Address) (*TokenVestingReleasedIterator, error) {

	var tokenRule []interface{}
	for _, tokenItem := range token {
		tokenRule = append(tokenRule, tokenItem)
	}

	logs, sub, err := _TokenVesting.contract.FilterLogs(opts, "Released", tokenRule)
	if err != nil {
		return nil, err
	}
	return &TokenVestingReleasedIterator{contract: _TokenVesting.contract, event: "Released", logs: logs, sub: sub}, nil
}

// WatchReleased is a free log subscription operation binding the contract event 0x2d87480f50083e2b2759522a8fdda59802650a8055e609a7772cf70c07748f52.
//
// Solidity: event Released(address indexed token, address vestingBeneficiary, uint256 amount)
func (_TokenVesting *TokenVestingFilterer) WatchReleased(opts *bind.WatchOpts, sink chan<- *TokenVestingReleased, token []common.Address) (event.Subscription, error) {

	var tokenRule []interface{}
	for _, tokenItem := range token {
		tokenRule = append(tokenRule, tokenItem)
	}

	logs, sub, err := _TokenVesting.contract.WatchLogs(opts, "Released", tokenRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TokenVestingReleased)
				if err := _TokenVesting.contract.UnpackLog(event, "Released", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseReleased is a log parse operation binding the contract event 0x2d87480f50083e2b2759522a8fdda59802650a8055e609a7772cf70c07748f52.
//
// Solidity: event Released(address indexed token, address vestingBeneficiary, uint256 amount)
func (_TokenVesting *TokenVestingFilterer) ParseReleased(log types.Log) (*TokenVestingReleased, error) {
	event := new(TokenVestingReleased)
	if err := _TokenVesting.contract.UnpackLog(event, "Released", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TokenVestingRoleAdminChangedIterator is returned from FilterRoleAdminChanged and is used to iterate over the raw logs and unpacked data for RoleAdminChanged events raised by the TokenVesting contract.
type TokenVestingRoleAdminChangedIterator struct {
	Event *TokenVestingRoleAdminChanged // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TokenVestingRoleAdminChangedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TokenVestingRoleAdminChanged)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TokenVestingRoleAdminChanged)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TokenVestingRoleAdminChangedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TokenVestingRoleAdminChangedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TokenVestingRoleAdminChanged represents a RoleAdminChanged event raised by the TokenVesting contract.
type TokenVestingRoleAdminChanged struct {
	Role              [32]byte
	PreviousAdminRole [32]byte
	NewAdminRole      [32]byte
	Raw               types.Log // Blockchain specific contextual infos
}

// FilterRoleAdminChanged is a free log retrieval operation binding the contract event 0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff.
//
// Solidity: event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)
func (_TokenVesting *TokenVestingFilterer) FilterRoleAdminChanged(opts *bind.FilterOpts, role [][32]byte, previousAdminRole [][32]byte, newAdminRole [][32]byte) (*TokenVestingRoleAdminChangedIterator, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var previousAdminRoleRule []interface{}
	for _, previousAdminRoleItem := range previousAdminRole {
		previousAdminRoleRule = append(previousAdminRoleRule, previousAdminRoleItem)
	}
	var newAdminRoleRule []interface{}
	for _, newAdminRoleItem := range newAdminRole {
		newAdminRoleRule = append(newAdminRoleRule, newAdminRoleItem)
	}

	logs, sub, err := _TokenVesting.contract.FilterLogs(opts, "RoleAdminChanged", roleRule, previousAdminRoleRule, newAdminRoleRule)
	if err != nil {
		return nil, err
	}
	return &TokenVestingRoleAdminChangedIterator{contract: _TokenVesting.contract, event: "RoleAdminChanged", logs: logs, sub: sub}, nil
}

// WatchRoleAdminChanged is a free log subscription operation binding the contract event 0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff.
//
// Solidity: event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)
func (_TokenVesting *TokenVestingFilterer) WatchRoleAdminChanged(opts *bind.WatchOpts, sink chan<- *TokenVestingRoleAdminChanged, role [][32]byte, previousAdminRole [][32]byte, newAdminRole [][32]byte) (event.Subscription, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var previousAdminRoleRule []interface{}
	for _, previousAdminRoleItem := range previousAdminRole {
		previousAdminRoleRule = append(previousAdminRoleRule, previousAdminRoleItem)
	}
	var newAdminRoleRule []interface{}
	for _, newAdminRoleItem := range newAdminRole {
		newAdminRoleRule = append(newAdminRoleRule, newAdminRoleItem)
	}

	logs, sub, err := _TokenVesting.contract.WatchLogs(opts, "RoleAdminChanged", roleRule, previousAdminRoleRule, newAdminRoleRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TokenVestingRoleAdminChanged)
				if err := _TokenVesting.contract.UnpackLog(event, "RoleAdminChanged", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRoleAdminChanged is a log parse operation binding the contract event 0xbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff.
//
// Solidity: event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)
func (_TokenVesting *TokenVestingFilterer) ParseRoleAdminChanged(log types.Log) (*TokenVestingRoleAdminChanged, error) {
	event := new(TokenVestingRoleAdminChanged)
	if err := _TokenVesting.contract.UnpackLog(event, "RoleAdminChanged", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TokenVestingRoleGrantedIterator is returned from FilterRoleGranted and is used to iterate over the raw logs and unpacked data for RoleGranted events raised by the TokenVesting contract.
type TokenVestingRoleGrantedIterator struct {
	Event *TokenVestingRoleGranted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TokenVestingRoleGrantedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TokenVestingRoleGranted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TokenVestingRoleGranted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TokenVestingRoleGrantedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TokenVestingRoleGrantedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TokenVestingRoleGranted represents a RoleGranted event raised by the TokenVesting contract.
type TokenVestingRoleGranted struct {
	Role    [32]byte
	Account common.Address
	Sender  common.Address
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterRoleGranted is a free log retrieval operation binding the contract event 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d.
//
// Solidity: event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)
func (_TokenVesting *TokenVestingFilterer) FilterRoleGranted(opts *bind.FilterOpts, role [][32]byte, account []common.Address, sender []common.Address) (*TokenVestingRoleGrantedIterator, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}
	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _TokenVesting.contract.FilterLogs(opts, "RoleGranted", roleRule, accountRule, senderRule)
	if err != nil {
		return nil, err
	}
	return &TokenVestingRoleGrantedIterator{contract: _TokenVesting.contract, event: "RoleGranted", logs: logs, sub: sub}, nil
}

// WatchRoleGranted is a free log subscription operation binding the contract event 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d.
//
// Solidity: event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)
func (_TokenVesting *TokenVestingFilterer) WatchRoleGranted(opts *bind.WatchOpts, sink chan<- *TokenVestingRoleGranted, role [][32]byte, account []common.Address, sender []common.Address) (event.Subscription, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}
	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _TokenVesting.contract.WatchLogs(opts, "RoleGranted", roleRule, accountRule, senderRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TokenVestingRoleGranted)
				if err := _TokenVesting.contract.UnpackLog(event, "RoleGranted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRoleGranted is a log parse operation binding the contract event 0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d.
//
// Solidity: event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)
func (_TokenVesting *TokenVestingFilterer) ParseRoleGranted(log types.Log) (*TokenVestingRoleGranted, error) {
	event := new(TokenVestingRoleGranted)
	if err := _TokenVesting.contract.UnpackLog(event, "RoleGranted", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TokenVestingRoleRevokedIterator is returned from FilterRoleRevoked and is used to iterate over the raw logs and unpacked data for RoleRevoked events raised by the TokenVesting contract.
type TokenVestingRoleRevokedIterator struct {
	Event *TokenVestingRoleRevoked // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TokenVestingRoleRevokedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TokenVestingRoleRevoked)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TokenVestingRoleRevoked)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TokenVestingRoleRevokedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TokenVestingRoleRevokedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TokenVestingRoleRevoked represents a RoleRevoked event raised by the TokenVesting contract.
type TokenVestingRoleRevoked struct {
	Role    [32]byte
	Account common.Address
	Sender  common.Address
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterRoleRevoked is a free log retrieval operation binding the contract event 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b.
//
// Solidity: event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)
func (_TokenVesting *TokenVestingFilterer) FilterRoleRevoked(opts *bind.FilterOpts, role [][32]byte, account []common.Address, sender []common.Address) (*TokenVestingRoleRevokedIterator, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}
	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _TokenVesting.contract.FilterLogs(opts, "RoleRevoked", roleRule, accountRule, senderRule)
	if err != nil {
		return nil, err
	}
	return &TokenVestingRoleRevokedIterator{contract: _TokenVesting.contract, event: "RoleRevoked", logs: logs, sub: sub}, nil
}

// WatchRoleRevoked is a free log subscription operation binding the contract event 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b.
//
// Solidity: event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)
func (_TokenVesting *TokenVestingFilterer) WatchRoleRevoked(opts *bind.WatchOpts, sink chan<- *TokenVestingRoleRevoked, role [][32]byte, account []common.Address, sender []common.Address) (event.Subscription, error) {

	var roleRule []interface{}
	for _, roleItem := range role {
		roleRule = append(roleRule, roleItem)
	}
	var accountRule []interface{}
	for _, accountItem := range account {
		accountRule = append(accountRule, accountItem)
	}
	var senderRule []interface{}
	for _, senderItem := range sender {
		senderRule = append(senderRule, senderItem)
	}

	logs, sub, err := _TokenVesting.contract.WatchLogs(opts, "RoleRevoked", roleRule, accountRule, senderRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TokenVestingRoleRevoked)
				if err := _TokenVesting.contract.UnpackLog(event, "RoleRevoked", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRoleRevoked is a log parse operation binding the contract event 0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b.
//
// Solidity: event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)
func (_TokenVesting *TokenVestingFilterer) ParseRoleRevoked(log types.Log) (*TokenVestingRoleRevoked, error) {
	event := new(TokenVestingRoleRevoked)
	if err := _TokenVesting.contract.UnpackLog(event, "RoleRevoked", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
